AppType=JavaFX
Build1=Default,cloyd.blink
File1=activity.bjl
File10=sk01_bottom_right.png
File100=vdSk04.bjl
File101=vdSk05.bjl
File102=vdSk06.bjl
File11=sk01_btClose.png
File12=sk01_btCloseEnt.png
File13=sk01_btMax.png
File14=sk01_btMaxEnt.png
File15=sk01_btMin.png
File16=sk01_btMinEnt.png
File17=sk01_left.png
File18=sk01_right.png
File19=sk01_title.png
File2=activity.png
File20=sk01_top_left.png
File21=sk01_top_right.png
File22=sk02.css
File23=sk02_bottom.png
File24=sk02_bottom_left.png
File25=sk02_bottom_right.png
File26=sk02_btClose.png
File27=sk02_btCloseEnt.png
File28=sk02_btMax.png
File29=sk02_btMaxEnt.png
File3=camera-icon.png
File30=sk02_btMin.png
File31=sk02_btMinEnt.png
File32=sk02_left.png
File33=sk02_right.png
File34=sk02_title.png
File35=sk02_top_left.png
File36=sk02_top_right.png
File37=sk03.css
File38=sk03_bottom.png
File39=sk03_bottom_left.png
File4=cellitem.bjl
File40=sk03_bottom_right.png
File41=sk03_btClose.png
File42=sk03_btCloseEnt.png
File43=sk03_btMax.png
File44=sk03_btMaxEnt.png
File45=sk03_btMin.png
File46=sk03_btMinEnt.png
File47=sk03_left.png
File48=sk03_right.png
File49=sk03_title.png
File5=home.png
File50=sk03_top_left.png
File51=sk03_top_right.png
File52=sk04.css
File53=sk04_bottom.png
File54=sk04_bottom_left.png
File55=sk04_bottom_right.png
File56=sk04_btClose.png
File57=sk04_btCloseEnt.png
File58=sk04_btMax.png
File59=sk04_btMaxEnt.png
File6=main.bjl
File60=sk04_btMin.png
File61=sk04_btMinEnt.png
File62=sk04_left.png
File63=sk04_right.png
File64=sk04_title.png
File65=sk04_top_left.png
File66=sk04_top_right.png
File67=sk05.css
File68=sk05_bottom.png
File69=sk05_bottom_left.png
File7=sk01.css
File70=sk05_bottom_right.png
File71=sk05_btClose.png
File72=sk05_btCloseEnt.png
File73=sk05_btMax.png
File74=sk05_btMaxEnt.png
File75=sk05_btMin.png
File76=sk05_btMinEnt.png
File77=sk05_left.png
File78=sk05_right.png
File79=sk05_title.png
File8=sk01_bottom.png
File80=sk05_top_left.png
File81=sk05_top_right.png
File82=sk06.css
File83=sk06_bottom.png
File84=sk06_bottom_left.png
File85=sk06_bottom_right.png
File86=sk06_btClose.png
File87=sk06_btCloseEnt.png
File88=sk06_btMax.png
File89=sk06_btMaxEnt.png
File9=sk01_bottom_left.png
File90=sk06_btMin.png
File91=sk06_btMinEnt.png
File92=sk06_left.png
File93=sk06_right.png
File94=sk06_title.png
File95=sk06_top_left.png
File96=sk06_top_right.png
File97=vdSk01.bjl
File98=vdSk02.bjl
File99=vdSk03.bjl
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup100=Default Group
FileGroup101=Default Group
FileGroup102=Default Group
FileGroup11=Default Group
FileGroup12=Default Group
FileGroup13=Default Group
FileGroup14=Default Group
FileGroup15=Default Group
FileGroup16=Default Group
FileGroup17=Default Group
FileGroup18=Default Group
FileGroup19=Default Group
FileGroup2=Default Group
FileGroup20=Default Group
FileGroup21=Default Group
FileGroup22=Default Group
FileGroup23=Default Group
FileGroup24=Default Group
FileGroup25=Default Group
FileGroup26=Default Group
FileGroup27=Default Group
FileGroup28=Default Group
FileGroup29=Default Group
FileGroup3=Default Group
FileGroup30=Default Group
FileGroup31=Default Group
FileGroup32=Default Group
FileGroup33=Default Group
FileGroup34=Default Group
FileGroup35=Default Group
FileGroup36=Default Group
FileGroup37=Default Group
FileGroup38=Default Group
FileGroup39=Default Group
FileGroup4=Default Group
FileGroup40=Default Group
FileGroup41=Default Group
FileGroup42=Default Group
FileGroup43=Default Group
FileGroup44=Default Group
FileGroup45=Default Group
FileGroup46=Default Group
FileGroup47=Default Group
FileGroup48=Default Group
FileGroup49=Default Group
FileGroup5=Default Group
FileGroup50=Default Group
FileGroup51=Default Group
FileGroup52=Default Group
FileGroup53=Default Group
FileGroup54=Default Group
FileGroup55=Default Group
FileGroup56=Default Group
FileGroup57=Default Group
FileGroup58=Default Group
FileGroup59=Default Group
FileGroup6=Default Group
FileGroup60=Default Group
FileGroup61=Default Group
FileGroup62=Default Group
FileGroup63=Default Group
FileGroup64=Default Group
FileGroup65=Default Group
FileGroup66=Default Group
FileGroup67=Default Group
FileGroup68=Default Group
FileGroup69=Default Group
FileGroup7=Default Group
FileGroup70=Default Group
FileGroup71=Default Group
FileGroup72=Default Group
FileGroup73=Default Group
FileGroup74=Default Group
FileGroup75=Default Group
FileGroup76=Default Group
FileGroup77=Default Group
FileGroup78=Default Group
FileGroup79=Default Group
FileGroup8=Default Group
FileGroup80=Default Group
FileGroup81=Default Group
FileGroup82=Default Group
FileGroup83=Default Group
FileGroup84=Default Group
FileGroup85=Default Group
FileGroup86=Default Group
FileGroup87=Default Group
FileGroup88=Default Group
FileGroup89=Default Group
FileGroup9=Default Group
FileGroup90=Default Group
FileGroup91=Default Group
FileGroup92=Default Group
FileGroup93=Default Group
FileGroup94=Default Group
FileGroup95=Default Group
FileGroup96=Default Group
FileGroup97=Default Group
FileGroup98=Default Group
FileGroup99=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=jokhttputils2
Library4=json
Library5=jreflection
Library6=javaobject
Library7=xcustomlistview
Library8=jbitmapcreator
Library9=xui views
Module1=frmMedia
Module2=frmActivity
NumberOfFiles=102
NumberOfLibraries=9
NumberOfModules=2
Version=7.51
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 900
	#MainFormHeight: 1000 
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private emailAddress As String = "[redacted] # replace with 'examplePass' instead"
	Private password As String = "[redacted] # replace with the empty string"
	Private authToken As String
	Private userRegion As String
	Private accountID As String
	Private networkID As String
	Private commandID As String
	Private commandComplete As Boolean
	Private cameraThumbnail As String
	Private fx As JFX
	Private MainForm As Form
	Private lbTitle As Label 'ignore
	Private xMouse, yMouse As Double
	Private isMaximized As Boolean = False
	Private ivClose As ImageView
	Private ivMax As ImageView
	Private ivMin As ImageView
	Private AtualSkin As String
	Private imgInit As String
	Private isMaximized As Boolean = False
	Private f_X, f_Y, f_W, f_H As Double 'ignore
	Private btnDriveway As Button 'ignore
	Private response As String
	Private ivDriveway As ImageView
	Private lblStatus As Label 'ignore
	Private ivFrontDoor As ImageView
	Private ivSideYard As ImageView
	Private lblDriveway As Label 'ignore
	Private lblFrontDoor As Label 'ignore
	Private lblSideYard As Label 'ignore
	Private clvDriveway As CustomListView
	Private clvFrontDoor As CustomListView
	Private clvSideYard As CustomListView
	Private lblSyncModule As Label 'ignore
	Private xui As XUI
	Private btnActivity As Button
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	Try
		Dim skinTemp As String
		Dim skinDefault As String
	
		If File.Exists(File.DirApp, "skin.ini") Then
			skinTemp = File.ReadString(File.DirApp, "skin.ini")
		Else
			File.WriteString(File.DirApp, "skin.ini", "vdSk03")
			skinTemp = "vdSk03"
		End If
	
		If skinTemp = "" Then
			skinDefault = "vdSk03"
		Else
			If skinTemp = "vdSk01" Or skinTemp = "vdSk02" Or skinTemp = "vdSk03" Or skinTemp = "vdSk04" Or skinTemp = "vdSk05" Or skinTemp = "vdSk06" Then
				skinDefault = skinTemp
			Else
				skinDefault = "vdSk03"
			End If
		End If
	
		MainForm = Form1
		MainForm.SetFormStyle("TRANSPARENT")
		MainForm.RootPane.LoadLayout(skinDefault) 'Load the layout file.
		AtualSkin = skinDefault
		MainForm.BackColor = fx.Colors.Transparent
		MainForm.RootPane.Style = "-fx-background-color:transparent;-fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 1.0) , 15,0, 0.0, 0.0);"
		MainForm.Resizable = True
		MainForm.Icon = fx.LoadImage(File.DirAssets, "home.png")
		MainForm.Title = "Catanaoan Blink XT2 Cameras v1.0"
		lbTitle.MouseCursor = fx.Cursors.MOVE
		lbTitle.Text = "Catanaoan Blink XT2 Cameras v1.0"
		Dim Obj As Reflector
		Obj.Target = ivClose
		Obj.AddEventHandler2("Close_Entered", "onMouseEnteredProperty")
		Obj.AddEventHandler2("Close_Exited", "onMouseExitedProperty")
		Dim Obj As Reflector
		Obj.Target = ivMax
		Obj.AddEventHandler2("Max_Entered", "onMouseEnteredProperty")
		Obj.AddEventHandler2("Max_Exited", "onMouseExitedProperty")
		Dim Obj As Reflector
		Obj.Target = ivMin
		Obj.AddEventHandler2("Min_Entered", "onMouseEnteredProperty")
		Obj.AddEventHandler2("Min_Exited", "onMouseExitedProperty")
		imgInit = AtualSkin.SubString(2).ToLowerCase
		Get_css
'		MainForm.WindowWidth = CheckMonitor.MaxX - CheckMonitor.MinX 'fx.PrimaryScreen.MaxX - fx.PrimaryScreen.MinX
'		MainForm.WindowLeft = CheckMonitor.MinX 'fx.PrimaryScreen.MinX
'		MainForm.WindowHeight = CheckMonitor.MaxY - CheckMonitor.MinY 'fx.PrimaryScreen.MaxY - fx.PrimaryScreen.MinY
'		MainForm.WindowTop = CheckMonitor.MinY 'fx.PrimaryScreen.MinY
		MainForm.WindowLeft = CheckMonitor.MaxX	- MainForm.Width - 20dip
		MainForm.WindowTop = CheckMonitor.MaxY - MainForm.Height - 20dip
	
		lblStatus.TextColor = fx.Colors.White
		MainForm.Show
		RequestAuthToken
	Catch
		Log(LastException)
	End Try
	
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub

Sub btnDriveway_Click
	RefreshCameras(False)
End Sub

Sub RequestAuthToken 
	' https://github.com/MattTW/BlinkMonitorProtocol
	' http://www.basic4ppc.com:51042/json/index.html
	' https://www.b4x.com/android/forum/threads/b4x-okhttputils2-with-wait-for.79345/#content
	' https://www.b4x.com/android/forum/threads/call-api-rest.89470/#content
	' https://www.b4x.com/android/forum/threads/server-online-json-tree-example.39048/#content
	Try
		lblStatus.Text = "Authenticating..."
		Dim jobLogin As HttpJob
		jobLogin.Initialize("", Me)
		jobLogin.PostString("https://rest.prod.immedia-semi.com/login","email=" &  emailAddress & "&password=" & password)
		jobLogin.GetRequest.SetContentType("application/x-www-form-urlencoded")
		Wait For (jobLogin) JobDone(jobLogin As HttpJob)
		If jobLogin.Success Then
			lblStatus.Text = "Successfully logged in to the Blink server..."
			
			GetAuthInfo(jobLogin.GetString)

			RESTGet("https://rest-" & userRegion & ".immedia-semi.com/user")
			Sleep(1000)
			If response.StartsWith("ERROR: ") Then
				Log(response)
				lblStatus.Text = response
				Return
			Else
				lblStatus.Text = "AuthToken acquired..." 
				GetUserInfo(response)
			End If
			
			RESTGet("https://rest-" & userRegion &".immedia-semi.com/api/v1/camera/usage")
			Sleep(1000)
			If response.StartsWith("ERROR: ") Then
				Log(response)
				lblStatus.Text = response
				Return
			Else
				GetAllCameras(response)
			End If
		Else
			lblStatus.Text = "RequestAuthToken error: " & jobLogin.GetString
			Log("RequestAuthToken error: " & jobLogin.GetString)
			Return
		End If
		jobLogin.Release
		lblStatus.Text = "Ready"
		
		RefreshCameras(True)
	Catch
		lblStatus.Text = "RequestAuthToken LastException: " & LastException
		Log("RequestAuthToken LastException: " & LastException)
	End Try
End Sub

Sub RefreshCameras(FirstRun As Boolean)
	' https://github.com/MattTW/BlinkMonitorProtocol
	' http://www.basic4ppc.com:51042/json/index.html
	' https://www.b4x.com/android/forum/threads/b4x-okhttputils2-with-wait-for.79345/#content
	' https://www.b4x.com/android/forum/threads/call-api-rest.89470/#content
	' https://www.b4x.com/android/forum/threads/server-online-json-tree-example.39048/#content
	Try
		Dim camera As String
		Dim iv As ImageView
		Dim clv As CustomListView
		Dim links As List
		links = Array("347574", "236967", "226821")
		
		RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/syncmodules")
		Sleep(1000)
		GetSyncModuleInfo(response)
		
		BlurIV("Driveway.jpg",ivDriveway)
		BlurIV("FrontDoor.jpg",ivFrontDoor)
		BlurIV("SideYard.jpg",ivSideYard)
		
		For Each link As String In links
			camera = link
			If camera = "347574" Then
				lblStatus.Text = "Capturing a new thumbnail for the Driveway..."
				iv = ivDriveway
				clv = clvDriveway
			Else If camera = "236967" Then
				lblStatus.Text = "Capturing a new thumbnail for the Front Door..."
				iv = ivFrontDoor
				clv = clvFrontDoor
			Else If camera = "226821" Then
				lblStatus.Text = "Capturing a new thumbnail for the Side Yard..."
				iv = ivSideYard
				clv = clvSideYard
			End If
			
			If FirstRun Then
				'iv.SetImage(Null)
				RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/camera/" & camera)
				Sleep(1000)
				GetCameraInfo(response,clv)
				DownloadImage("https://rest-" & userRegion &".immedia-semi.com/" & cameraThumbnail & ".jpg",iv, camera)
				lblStatus.Text = "Ready"
			Else
				RESTPost("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/camera/" & camera & "/thumbnail")
				Sleep(1000)
				If response.StartsWith("ERROR: ") Then
					Log(response)
					lblStatus.Text = response
					Return
				Else
					GetCommandID(response)
					RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/command/" & commandID)
					Sleep(1000)
					If response.StartsWith("ERROR: ") Then
						Log(response)
						lblStatus.Text = response
						Return
					Else
						For i = 1 To 30
							GetCommandStatus(response)
							If commandComplete Then
								RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/camera/" & camera)
								Sleep(1000)
								GetCameraInfo(response,clv)
								DownloadImage("https://rest-" & userRegion &".immedia-semi.com/" & cameraThumbnail & ".jpg",iv,camera)
								Exit
							Else
								If camera = "347574" Then
									lblStatus.Text = "Awaiting for the Driveway thumbnail... " & i & "/30"
								Else If camera = "236967" Then
									lblStatus.Text = "Awaiting for the Front Door thumbnail...  " & i & "/30"
								Else If camera = "226821" Then
									lblStatus.Text = "Awaiting for the Side Yard thumbnail... " & i & "/30"
								End If
							End If
							RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/command/" & commandID)
							Sleep(1000)
						Next
						If commandComplete = False Then
							If camera = "347574" Then
								lblStatus.Text = "Failed to retrieve Driveway thumbnail..."
								'ivDriveway.SetImage(Null)
							Else If camera = "236967" Then
								lblStatus.Text = "Failed to retrieve Front Door thumbnail..."
								'ivFrontDoor.SetImage(Null)
							Else If camera = "226821" Then
								lblStatus.Text = "Failed to retrieve Side Yard thumbnail..."
								'ivSideYard.SetImage(Null)
							End If
						Else
							Dim strTimestamp As String
							DateTime.DateFormat = "h:mm:ss a"
							strTimestamp = DateTime.Date(DateTime.Now)
							lblStatus.Text = "Last updated: " & strTimestamp
							If camera = "347574" Then
								lblDriveway.Text = "Driveway " & strTimestamp
							Else If camera = "236967" Then
								lblFrontDoor.Text = "Front Door " & strTimestamp
							Else If camera = "226821" Then
								lblSideYard.Text = "Side Yard " & strTimestamp
							End If
						End If
					End If
				End If
			End If
		Next
	Catch
		Log("RefreshCamera LastException: " & LastException)
		lblStatus.Text = "RefreshCamera LastException: " & LastException
	End Try
End Sub

Sub RESTGet(url As String) As ResumableSub
	Try
		Dim j As HttpJob
		response = ""
		j.Initialize("", Me) 'name is empty as it is no longer needed
		j.Download(url)
		j.GetRequest.SetHeader("TOKEN_AUTH", authToken)
		Wait For (j) JobDone(j As HttpJob)
		If j.Success Then
			response = j.GetString
		Else
			response = "ERROR: " & j.ErrorMessage
			lblStatus.Text = "ERROR: " & j.ErrorMessage
		End If
		j.Release
	Catch
		response = "ERROR: " & LastException
		Log("RESTDownload LastException: " & LastException)
		lblStatus.Text = "RESTGet LastException: " & LastException
	End Try
	Log("URL: " & url)
	Log("Response: " & response)
	Return(response)
End Sub

Sub RESTPost(url As String) As ResumableSub
	Try
		Dim j As HttpJob
		response = ""
		j.Initialize("", Me) 'name is empty as it is no longer needed
		j.PostString(url,"")
		j.GetRequest.SetContentType("application/x-www-form-urlencoded")
		j.GetRequest.SetHeader("TOKEN_AUTH", authToken)
		Wait For (j) JobDone(j As HttpJob)
		If j.Success Then
			response = j.GetString
		Else
			response = "ERROR: " & j.ErrorMessage
			lblStatus.Text = "ERROR: " & j.ErrorMessage
		End If
		j.Release
	Catch
		response = "ERROR: " & LastException
		Log("RESTPost LastException: " & LastException)
		lblStatus.Text = "RESTPost LastException: " & LastException
	End Try
	Log("URL: " & url)
	Log("Response: " & response)
	Return(response)
End Sub

Sub DownloadImage (Link As String, iv As ImageView, camera As String)
	Try
		Dim j As HttpJob
		response = ""
		j.Initialize("", Me)
		j.Download(Link)
		j.GetRequest.SetHeader("TOKEN_AUTH", authToken)
		Wait For (j) JobDone(j As HttpJob)
		If j.Success Then
			' Save to a JPG file
			If camera = "347574" Then
				Dim out As OutputStream = File.OpenOutput(File.DirApp, "Driveway.jpg", False)
			Else If camera = "236967" Then
				Dim out As OutputStream = File.OpenOutput(File.DirApp, "FrontDoor.jpg", False)
			Else If camera = "226821" Then
				Dim out As OutputStream = File.OpenOutput(File.DirApp, "SideYard.jpg", False)
			End If
			File.Copy2(j.GetInputStream, out)
			out.Close '<------ very important
			
			' Display in ImageView
			iv.SetImage(j.GetBitmap)
		Else
			response = "ERROR: " & j.ErrorMessage
			lblStatus.Text = "ERROR: " & j.ErrorMessage
		End If
		j.Release
	Catch
		lblStatus.Text = "DownloadImage LastException: " & LastException
		Log(LastException)
	End Try
End Sub


Sub GetAuthInfo(json As String)
	Try
		lblStatus.Text = "Getting authtoken..."
		Dim parser As JSONParser
		parser.Initialize(json)
		Dim root As Map = parser.NextObject
		Dim authtokenmap As Map = root.Get("authtoken")
		authToken = authtokenmap.Get("authtoken")
		Log("authToken: " &  authToken)
'	Dim message As String = authtoken.Get("message")
'	Dim client As Map = root.Get("client")
'	Dim id As Int = client.Get("id")
'	Dim networks As Map = root.Get("networks")
'	Dim 94896 As Map = networks.Get("94896")
'	Dim onboarded As String = 94896.Get("onboarded")
'	Dim name As String = 94896.Get("name")
		Dim region As Map = root.Get("region")
		userRegion = region.GetKeyAt(0)
		Log("userRegion: " &  userRegion)
'	Dim u006 As String = region.Get("u006")
'	Dim account As Map = root.Get("account")
'	Dim id As Int = account.Get("id")
	Catch
		Log(LastException)
		lblStatus.Text = "GetAuthInfo LastException: " & LastException
	End Try

End Sub

Sub GetUserInfo(json As String)
	Try
		lblStatus.Text = "Getting user information..."
		Dim parser As JSONParser
		parser.Initialize(json)
		Dim root As Map = parser.NextObject
'	Dim owner As String = root.Get("owner")
'	Dim temp_units As String = root.Get("temp_units")
'	Dim verified As String = root.Get("verified")
'	Dim pin_created_at As String = root.Get("pin_created_at")
'	Dim created_at As String = root.Get("created_at")
'	Dim time_zone As String = root.Get("time_zone")
'	Dim Type As String = root.Get("type")
'	Dim pin_failures As Int = root.Get("pin_failures")
'	Dim updated_at As String = root.Get("updated_at")
'	Dim reset_expiration As String = root.Get("reset_expiration")
'	Dim pin As String = root.Get("pin")
'	Dim name As String = root.Get("name")
'	Dim user_access As String = root.Get("user_access")
		'accountID = root.Get("id") '88428 <-- OLD INCORRECT
		accountID = root.Get("account_id") '88438
		Log("accountID: " &  accountID)
		'   Dim email As String = root.Get("email")
	Catch
		Log(LastException)
		lblStatus.Text = "GetUserInfo LastException: " & LastException
	End Try
End Sub

Sub GetAllCameras(json As String)
	Try
		lblStatus.Text = "Getting all cameras information..."
		Dim parser As JSONParser
		parser.Initialize(json)
		Dim root As Map = parser.NextObject
'	Dim reference As Map = root.Get("reference")
'	Dim usage As Int = reference.Get("usage")
'	Dim range_days As Int = root.Get("range_days")
		Dim networks As List = root.Get("networks")
		For Each colnetworks As Map In networks
'		Dim cameras As List = colnetworks.Get("cameras")
'		For Each colcameras As Map In cameras
'			Dim usage As Int = colcameras.Get("usage")
'			Dim name As String = colcameras.Get("name")
'			Dim lv_seconds As Int = colcameras.Get("lv_seconds")
'			Dim id As Int = colcameras.Get("id")
'			Dim clip_seconds As Int = colcameras.Get("clip_seconds")
'		Next
			networkID = colnetworks.Get("network_id")
			Log("networkID: " &  networkID)
			'Dim name As String = colnetworks.Get("name")
		Next
	Catch
		Log(LastException)
		lblStatus.Text = "GetAllCameras LastException: " & LastException
	End Try
End Sub

Sub GetCommandID(json As String)
	Try
		Dim parser As JSONParser
		parser.Initialize(json)
		Dim root As Map = parser.NextObject
'	Dim server As String = root.Get("server")
'	Dim stage_vs As String = root.Get("stage_vs")
'	Dim firmware_id As String = root.Get("firmware_id")
'	Dim stage_rest As String = root.Get("stage_rest")
'	Dim created_at As String = root.Get("created_at")
'	Dim stage_cs_db As String = root.Get("stage_cs_db")
'	Dim sm_ack As String = root.Get("sm_ack")
'	Dim duration As String = root.Get("duration")
'	Dim stage_is As String = root.Get("stage_is")
'	Dim stage_cs_sent As String = root.Get("stage_cs_sent")
'	Dim updated_at As String = root.Get("updated_at")
'	Dim stage_dev As String = root.Get("stage_dev")
'	Dim execute_time As String = root.Get("execute_time")
'	Dim by_whom As String = root.Get("by_whom")
		commandID = root.Get("id")
		Log("commandID: " & commandID)
'	Dim diagnostic As String = root.Get("diagnostic")
'	Dim player_transaction As String = root.Get("player_transaction")
'	Dim attempts As Int = root.Get("attempts")
'	Dim lfr_ack As String = root.Get("lfr_ack")
'	Dim stage_sm As String = root.Get("stage_sm")
'	Dim debug As String = root.Get("debug")
'	Dim state_stage As String = root.Get("state_stage")
'	Dim camera_id As Int = root.Get("camera_id")
'	Dim target_id As Int = root.Get("target_id")
'	Dim command As String = root.Get("command")
'	Dim target As String = root.Get("target")
'	Dim stage_lv As String = root.Get("stage_lv")
'	Dim sequence As String = root.Get("sequence")
'	Dim network_id As Int = root.Get("network_id")
'	Dim account_id As Int = root.Get("account_id")
'	Dim state_condition As String = root.Get("state_condition")
'	Dim siren_id As String = root.Get("siren_id")
'	Dim parent_command_id As String = root.Get("parent_command_id")
'	Dim sync_module_id As Int = root.Get("sync_module_id")
'	Dim transaction As String = root.Get("transaction")
	Catch
		Log(LastException)
		lblStatus.Text = "GetCommandID LastException: " & LastException
	End Try
End Sub

Sub GetCommandStatus(json As String) 
	Try
		Dim parser As JSONParser
		parser.Initialize(json)
		Dim root As Map = parser.NextObject
		commandComplete = root.Get("complete")
		Log("commandComplete: " & commandComplete)
	Catch
		Log(LastException)
		lblStatus.Text = "GetCommandStatus LastException: " & LastException
	End Try
End Sub

Sub GetCameraInfo(json As String, clv As CustomListView)
	Try
		Dim parser As JSONParser
		parser.Initialize(json)
		Dim root As Map = parser.NextObject
		Dim camera_status As Map = root.Get("camera_status")
		Dim total_108_wakeups As Int = camera_status.Get("total_108_wakeups")
		Dim battery_voltage As Int = camera_status.Get("battery_voltage")
		Dim light_sensor_data_valid As String = camera_status.Get("light_sensor_data_valid")
		Dim lfr_tb_wakeups As Int = camera_status.Get("lfr_tb_wakeups")
		Dim fw_git_hash As String = camera_status.Get("fw_git_hash")
		Dim wifi_strength As Int = camera_status.Get("wifi_strength")
		Dim lfr_strength As Int = camera_status.Get("lfr_strength")
		Dim total_tb_wakeups As Int = camera_status.Get("total_tb_wakeups")
		Dim created_at As String = camera_status.Get("created_at")
		Dim light_sensor_ch0 As Int = camera_status.Get("light_sensor_ch0")
		Dim mac As String = camera_status.Get("mac")
		Dim unit_number As Int = camera_status.Get("unit_number")
		Dim updated_at As String = camera_status.Get("updated_at")
		Dim light_sensor_ch1 As Int = camera_status.Get("light_sensor_ch1")
		Dim time_dhcp_lease As Int = camera_status.Get("time_dhcp_lease")
		Dim temperature As Int = camera_status.Get("temperature")
		Dim time_first_video As Int = camera_status.Get("time_first_video")
		Dim time_dns_resolve As Int = camera_status.Get("time_dns_resolve")
		Dim id As Int = camera_status.Get("id")
		Dim temp_alert_status As String = camera_status.Get("temp_alert_status")
		Dim time_108_boot As Int = camera_status.Get("time_108_boot")
		Dim lfr_108_wakeups As Int = camera_status.Get("lfr_108_wakeups")
		cameraThumbnail = camera_status.Get("thumbnail")
		Log("cameraThumbnail: " & cameraThumbnail)
		Dim lifetime_duration As Int = camera_status.Get("lifetime_duration")
		Dim wifi_connect_failure_count As Int = camera_status.Get("wifi_connect_failure_count")
		Dim camera_id As Int = camera_status.Get("camera_id")
		Dim battery_alert_status As String = camera_status.Get("battery_alert_status")
		Dim dhcp_failure_count As Int = camera_status.Get("dhcp_failure_count")
		Dim ip_address As String = camera_status.Get("ip_address")
		Dim ipv As String = camera_status.Get("ipv")
		Dim light_sensor_data_new As String = camera_status.Get("light_sensor_data_new")
		Dim network_id As Int = camera_status.Get("network_id")
		Dim account_id As Int = camera_status.Get("account_id") '88438
		Dim serial As String = camera_status.Get("serial")
		Dim dev_1 As Int = camera_status.Get("dev_1")
		Dim time_wlan_connect As Int = camera_status.Get("time_wlan_connect")
		Dim dev_2 As Int = camera_status.Get("dev_2")
		Dim socket_failure_count As Int = camera_status.Get("socket_failure_count")
		Dim dev_3 As Int = camera_status.Get("dev_3")
		Dim pir_rejections As Int = camera_status.Get("pir_rejections")
		Dim sync_module_id As Int = camera_status.Get("sync_module_id")
		Dim lifetime_count As Int = camera_status.Get("lifetime_count")
		Dim error_codes As Int = camera_status.Get("error_codes")
		Dim fw_version As String = camera_status.Get("fw_version")
		Dim ac_power As String = camera_status.Get("ac_power")
	
		clv.Clear
		clv.AddTextItem("Battery voltage: " & NumberFormat((battery_voltage / 100),0,2) & "V - " & CheckBattLife(battery_voltage), "battery_voltage")
		clv.AddTextItem("Camera to WiFi strength: " & wifi_strength & " - " & CheckLFRLevel(wifi_strength), "wifi_strength")
		clv.AddTextItem("Camera to Sync Module strength (LFR): " & lfr_strength & " - " & CheckLFRLevel(lfr_strength), "lfr_strength")
		clv.AddTextItem("Temperature: " & temperature & "ºF", "temperature")
		clv.AddTextItem("Firmware version: " & fw_version, "fw_version")
		clv.AddTextItem("Firmware Git Hash: " & fw_git_hash, "fw_git_hash")
		clv.AddTextItem("Battery alert status: " & battery_alert_status, "battery_alert_status")
		clv.AddTextItem("Temperature alert status: " & temp_alert_status, "temp_alert_status")
		clv.AddTextItem("Updated at: " & updated_at, "updated_at")
		clv.AddTextItem("Created at: " & created_at, "created_at")
		clv.AddTextItem("IP address: " & ip_address, "ip_address")
		clv.AddTextItem("MAC address: " & mac, "mac")
		clv.AddTextItem("Camera ID: " & camera_id, "camera_id")
		clv.AddTextItem("Serial: " & serial, "serial")
		clv.AddTextItem("Network ID: " & network_id, "network_id")
		clv.AddTextItem("Account ID: " & account_id, "account_id")
		clv.AddTextItem("ID: " & id, "id")
		clv.AddTextItem("Sync Module ID: " & sync_module_id, "sync_module_id")
		clv.AddTextItem("Light sensor data valid: " & light_sensor_data_valid, "light_sensor_data_valid")
		clv.AddTextItem("DHCP failure count: " & dhcp_failure_count, "dhcp_failure_count")
		clv.AddTextItem("LFR tb wakeups: " & lfr_tb_wakeups, "lfr_tb_wakeups")
		clv.AddTextItem("Socket failure count: " & socket_failure_count, "socket_failure_count")
		clv.AddTextItem("Camera thumbnail: " & cameraThumbnail, "thumbnail")
		clv.AddTextItem("WiFi connect failure count: " & wifi_connect_failure_count, "wifi_connect_failure_count")
		clv.AddTextItem("Error codes: " & error_codes, "error_codes")
		clv.AddTextItem("AC power: " & ac_power, "ac_power")
		clv.AddTextItem("Total 108 wakeups: " & total_108_wakeups, "total_108_wakeups")
		clv.AddTextItem("Total Tb wakeups: " & total_tb_wakeups, "total_tb_wakeups")
		clv.AddTextItem("Light sensor ch0: " & light_sensor_ch0, "light_sensor_ch0")
		clv.AddTextItem("Unit number: " & unit_number, "unit_number")
		clv.AddTextItem("Light sensor ch1: " & light_sensor_ch1, "light_sensor_ch1")
		clv.AddTextItem("Time dhcp lease: " & time_dhcp_lease, "time_dhcp_lease")
		clv.AddTextItem("Time first video: " & time_first_video, "time_first_video")
		clv.AddTextItem("Time dns resolve: " & time_dns_resolve, "time_dns_resolve")
		clv.AddTextItem("Time 108 boot: " & time_108_boot, "time_108_boot")
		clv.AddTextItem("LFR 108 wakeups: " & lfr_108_wakeups, "lfr_108_wakeups")
		clv.AddTextItem("lifetime duration: " & lifetime_duration, "lifetime_duration")
		clv.AddTextItem("lpv: " & ipv, "ipv")
		clv.AddTextItem("light sensor data new: " & light_sensor_data_new, "light_sensor_data_new")
		clv.AddTextItem("Dev_1: " & dev_1, "dev_1")
		clv.AddTextItem("Dev_2: " & dev_2, "dev_2")
		clv.AddTextItem("Dev_3: " & dev_3, "dev_3")
		clv.AddTextItem("Time wlan connect: " & time_wlan_connect, "time_wlan_connect")
		clv.AddTextItem("PIR rejections: " & pir_rejections, "pir_rejections")
		clv.AddTextItem("Lifetime count: " & lifetime_count, "lifetime_count")

		For i = 0 To clv.Size-1
			Dim item As String
			item = clv.GetValue(i)
			If item.Contains("thumbnail") Then
				clv.ResizeItem(i,80dip)
			Else
				clv.ResizeItem(i,35dip)
			End If
		Next
	Catch
		Log(LastException)
		lblStatus.Text = "GetCameraInfo LastException: " & LastException
	End Try
End Sub

Sub GetSyncModuleInfo(json As String)
	Try
		Dim parser As JSONParser
		parser.Initialize(json)
		Dim root As Map = parser.NextObject
		Dim syncmodule As Map = root.Get("syncmodule")
'	Dim onboarded As String = syncmodule.Get("onboarded")
'	Dim server As String = syncmodule.Get("server")
'	Dim feature_plan_id As String = syncmodule.Get("feature_plan_id")
		Dim wifi_strength As Int = syncmodule.Get("wifi_strength")
		Dim os_version As String = syncmodule.Get("os_version")
'	Dim created_at As String = syncmodule.Get("created_at")
'	Dim ip_address As String = syncmodule.Get("ip_address")
'	Dim table_update_sequence As Int = syncmodule.Get("table_update_sequence")
'	Dim lfr_frequency As String = syncmodule.Get("lfr_frequency")
'	Dim last_wifi_alert As String = syncmodule.Get("last_wifi_alert")
'	Dim offline_alert_count As Int = syncmodule.Get("offline_alert_count")
'	Dim last_hb As String = syncmodule.Get("last_hb")
'	Dim network_id As Int = syncmodule.Get("network_id")
'	Dim last_activity As String = syncmodule.Get("last_activity")
'	Dim account_id As Int = syncmodule.Get("account_id") '88438
'	Dim updated_at As String = syncmodule.Get("updated_at")
'	Dim serial As String = syncmodule.Get("serial")
'	Dim mac_address As String = syncmodule.Get("mac_address")
'	Dim wifi_alert_count As Int = syncmodule.Get("wifi_alert_count")
'	Dim name As String = syncmodule.Get("name")
'	Dim id As Int = syncmodule.Get("id")
		Dim fw_version As String = syncmodule.Get("fw_version")
'	Dim last_offline_alert As String = syncmodule.Get("last_offline_alert")
		Dim status As String = syncmodule.Get("status")
		lblSyncModule.Text = "Sync Module is " & status & " | Wifi Strength: " & wifi_strength & " bars | Firmware version: " & fw_version & " | OS version: " & os_version
	Catch
		Log(LastException)
		lblStatus.Text = "GetSyncModuleInfo LastException: " & LastException
	End Try
End Sub

Sub CheckBattLife(battlevel As Int) As String
	Try
		' https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.batteryuniversity.com%2F_img%2Fcontent%2Fbu-106-table-4.jpg&imgrefurl=https%3A%2F%2Fbatteryuniversity.com%2Flearn%2Farticle%2Fprimary_batteries&docid=iRglhUshphFArM&tbnid=lTA22wm3cFfbCM%3A&vet=10ahUKEwjCo66R0NrkAhWVrZ4KHVq8BmcQMwi4AShFMEU..i&w=570&h=265&bih=947&biw=1680&q=AAA%20battery%20level&ved=0ahUKEwjCo66R0NrkAhWVrZ4KHVq8BmcQMwi4AShFMEU&iact=mrc&uact=8
		If battlevel <= 136 Then
			Return "Replace battery now!"
		else If battlevel >= 160 Then
			Return "Very high"
		else If battlevel > 136 And battlevel < 138 Then
			Return "Very low"
		Else
			Return "High"
		End If
	Catch
		Log(LastException)
		lblStatus.Text = "CheckBattLife LastException: " & LastException
		Return ""
	End Try
End Sub

Sub CheckLFRLevel(lfrlevel As Int) As String
	Try
		' https://www.metageek.com/training/resources/wifi-signal-strength-basics.html
		If lfrlevel > -67 Then
			Return "Amazing"
		else If lfrlevel > -70 And lfrlevel <= -67 Then
			Return "Very good"
		else If lfrlevel > -80 And lfrlevel <= -70 Then
			Return "OK"
		else If lfrlevel > -90 And lfrlevel <= -80 Then
			Return "Not Good"
		Else
			Return "Unusable"
		End If
	Catch
		Log(LastException)
		lblStatus.Text = "CheckLFRLevel LastException: " & LastException
		Return ""
	End Try
End Sub

Private Sub lbTitle_MouseDragged (EventData As MouseEvent)
	Try
		If isMaximized Then Return
		Dim jo As JavaObject = EventData
		MainForm.WindowLeft = jo.RunMethod("getScreenX", Null) - xMouse
		MainForm.WindowTop = jo.RunMethod("getScreenY", Null) - yMouse
	Catch
		Log(LastException)
	End Try
End Sub

Private Sub lbTitle_MousePressed (EventData As MouseEvent)
	Try
		xMouse = EventData.X + lbTitle.Left + 15
		yMouse = EventData.Y + lbTitle.Top + 15
	Catch
		Log(LastException)
	End Try
End Sub

Private Sub ivClose_MouseClicked (EventData As MouseEvent)
	File.Delete(File.DirApp, "Driveway.jpg")
	File.Delete(File.DirApp, "FrontDoor.jpg")
	File.Delete(File.DirApp, "SideYard.jpg")
	ExitApplication
End Sub

Private Sub Close_Entered_Event(e As Event)
	Try
		ivClose.SetImage(fx.LoadImage(File.DirAssets, imgInit & "_btCloseEnt.png"))
	Catch
		Log(LastException)
	End Try
End Sub

Private Sub Close_Exited_Event(e As Event)
	Try
		ivClose.SetImage(fx.LoadImage(File.DirAssets, imgInit & "_btClose.png"))
	Catch
		Log(LastException)
	End Try
End Sub

Private Sub ivMax_MouseClicked (EventData As MouseEvent)

End Sub

Private Sub Max_Entered_Event(e As Event)
	Try
		ivMax.SetImage(fx.LoadImage(File.DirAssets, imgInit & "_btMaxEnt.png"))
	Catch
		Log(LastException)
	End Try
End Sub

Private Sub Max_Exited_Event(e As Event)
	Try
		ivMax.SetImage(fx.LoadImage(File.DirAssets, imgInit & "_btMax.png"))
	Catch
		Log(LastException)
	End Try
End Sub

Private Sub ivMin_MouseClicked (EventData As MouseEvent)
	Try
		Dim jmf As JavaObject = MainForm
		Dim stage As JavaObject = jmf.GetField("stage")
		stage.RunMethod("setIconified", Array As Object(True))
	Catch
		Log(LastException)
	End Try
End Sub

Private Sub Min_Entered_Event(e As Event)
	Try
		ivMin.SetImage(fx.LoadImage(File.DirAssets, imgInit & "_btMinEnt.png"))
	Catch
		Log(LastException)
	End Try
End Sub

Private Sub Min_Exited_Event(e As Event)
	Try
		ivMin.SetImage(fx.LoadImage(File.DirAssets, imgInit & "_btMin.png"))
	Catch
		Log(LastException)
	End Try
End Sub

Public Sub Get_css
	Try
		Dim jForm As JavaObject = MainForm
		Dim scene As JavaObject = jForm.GetField("scene")
		Dim stylesheets As List = scene.RunMethod("getStylesheets", Null)
		stylesheets.Clear
		stylesheets.Add(File.GetUri(File.DirAssets, imgInit & ".css"))
	Catch
		Log(LastException)
	End Try
End Sub

Sub CheckMonitor() As Screen
	Try
		If fx.Screens.Size= 1 Then
			Dim SList As List = fx.Screens
			Dim S As Screen = SList.Get(0)
			'Msgbox.Show("Minimum X: " & S.MinX,"Screen")
			Return S
		Else If fx.Screens.Size> 1 Then
			Dim SList As List = fx.Screens
			Dim S As Screen = SList.Get(2)
			'Msgbox.Show("Minimum X: " & S.MinX,"Screen")
			Return S
		Else
			Dim SList As List = fx.Screens
			Dim S As Screen = SList.Get(0)
			'Msgbox.Show("Minimum X: " & S.MinX,"Screen")
			Return S
		End If
	Catch
		Dim SList As List = fx.Screens
		Dim S As Screen = SList.Get(0)
		'Msgbox.Show("Minimum X: " & S.MinX,"Screen")
		Return S
	End Try
End Sub

Sub clvSideYard_ItemClick (Index As Int, Value As Object)
	clvDriveway.JumpToItem(Index)
	clvFrontDoor.JumpToItem(Index)
	clvSideYard.JumpToItem(Index)
End Sub

Sub clvFrontDoor_ItemClick (Index As Int, Value As Object)
	clvDriveway.JumpToItem(Index)
	clvFrontDoor.JumpToItem(Index)
	clvSideYard.JumpToItem(Index)
End Sub

Sub clvDriveway_ItemClick (Index As Int, Value As Object)
	clvDriveway.JumpToItem(Index)
	clvFrontDoor.JumpToItem(Index)
	clvSideYard.JumpToItem(Index)
End Sub

Sub ivDriveway_MouseClicked (EventData As MouseEvent)
	Dim mf As frmMedia
	mf.Initialize(MainForm)
	mf.url=$"
   <h1>Driveway</h1>
   <img src="${File.GetUri(File.DirApp, "Driveway.jpg")}"/>
   
"$
	mf.Show
	Return
''	'***************** TO REQUEST FOR A NEW VIDEO THAT WILL SHOW ON SAM '*****************
''	RESTPost("https://rest-" & userRegion & ".immedia-semi.com/network/" & networkID & "/camera/347574/clip")
''	'RESTGet("https://rest-" & userRegion &".immedia-semi.com/api/v1/accounts/" & accountID & "/media/changed?since=2019-04-19T23:11:20+0000&page=1")
''	Sleep(1000)
''	'Log(response)
''	' https://rest-'+region+'.immedia-semi.com/api/v1/accounts/'+accountID+'/media/changed?since=2019-04-19T23:11:20+0000&page=' + str(pageNum)
''	' https://rest-u006.immedia-semi.com/api/v1/accounts/a/media/changed?since=-999999999-01-01T00:00:00+18:00&page=1
''	' https://rest-u006.immedia-semi.com/api/v1/accounts/88428/media/changed?since=-999999999-01-01T00:00:00+18:00&page=1
''	' https://rest.prod.immedia-semi.com/network/*network_id*/camera/*camera_id*/signals
''	
''	GetCommandID(response)
''	RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/command/" & commandID)
''	Sleep(1000)
''	For i = 1 To 30
''		GetCommandStatus(response)
''		If commandComplete Then
''			RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/camera/347574")
''			Sleep(1000)
''			GetCameraInfo(response,clvDriveway)
''			File.WriteString(File.DirApp,"response.txt",response)
''			Exit
''		End If
'''		Else
'''			If camera = "347574" Then
'''				lblStatus.Text = "Awaiting for the Driveway thumbnail... " & i & "/30"
'''			Else If camera = "236967" Then
'''				lblStatus.Text = "Awaiting for the Front Door thumbnail...  " & i & "/30"
'''			Else If camera = "226821" Then
'''				lblStatus.Text = "Awaiting for the Side Yard thumbnail... " & i & "/30"
'''			End If
'''		End If
''		RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/command/" & commandID)
''		Sleep(1000)
''	Next
''	'***************** TO REQUEST FOR A NEW VIDEO THAT WILL SHOW ON SAM '*****************
	
	'RESTGet("https://rest-" & userRegion & ".immedia-semi.com/events/network/" & networkID)
	RESTGet("https://rest-" & userRegion &".immedia-semi.com/api/v1/accounts/88438/media/changed?since=2019-04-19T23:11:20+0000&page=1")
	'RESTGet("https://rest-" & userRegion &".immedia-semi.com/account/clients")
	Sleep(1000)
	Log(response)
	File.WriteString(File.DirApp,"response.txt",response)
'	GetVideos(response)
'	' https://rest-'+region+'.immedia-semi.com/api/v1/accounts/'+accountID+'/media/changed?since=2019-04-19T23:11:20+0000&page=' + str(pageNum)
'	' https://rest-u006.immedia-semi.com/api/v1/accounts/a/media/changed?since=-999999999-01-01T00:00:00+18:00&page=1
'	' https://rest-u006.immedia-semi.com/api/v1/accounts/88428/media/changed?since=-999999999-01-01T00:00:00+18:00&page=1
'	' https://rest.prod.immedia-semi.com/network/*network_id*/camera/*camera_id*/signals
'	
'	GetCommandID(response)
'	RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/command/" & commandID)
'	Sleep(1000)
'	For i = 1 To 30
'		GetCommandStatus(response)
'		If commandComplete Then
'			RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/camera/347574")
'			Sleep(1000)
'			GetCameraInfo(response,clvDriveway)
'			File.WriteString(File.DirApp,"response.txt",response)
'			Exit
'		End If
''		Else
''			If camera = "347574" Then
''				lblStatus.Text = "Awaiting for the Driveway thumbnail... " & i & "/30"
''			Else If camera = "236967" Then
''				lblStatus.Text = "Awaiting for the Front Door thumbnail...  " & i & "/30"
''			Else If camera = "226821" Then
''				lblStatus.Text = "Awaiting for the Side Yard thumbnail... " & i & "/30"
''			End If
''		End If
'		RESTGet("https://rest-" & userRegion &".immedia-semi.com/network/" & networkID &"/command/" & commandID)
'		Sleep(1000)
'	Next
End Sub

Sub ivFrontDoor_MouseClicked (EventData As MouseEvent)
	Dim mf As frmMedia
	mf.Initialize(MainForm)
	mf.url=$"
   <h1>Front Door</h1>
   <img src="${File.GetUri(File.DirApp, "FrontDoor.jpg")}"/>
   
"$
	mf.Show
End Sub

Sub ivSideYard_MouseClicked (EventData As MouseEvent)
	Dim mf As frmMedia
	mf.Initialize(MainForm)
	mf.url=$"
   <h1>Side Yard</h1>
   <img src="${File.GetUri(File.DirApp, "SideYard.jpg")}"/>
   
"$
	mf.Show
End Sub

Sub BlurIV (image As String,iv As ImageView)
	Try
		Dim bmp As B4XBitmap = xui.LoadBitmapResize(File.DirApp, image, iv.Width, iv.Height, True)
		iv.SetImage(Blur(bmp))
	Catch
		Log(LastException)
		lblStatus.Text = "BlurIV LastException: " & LastException
	End Try
End Sub

Private Sub Blur (bmp As B4XBitmap) As B4XBitmap
	Try
		Dim bc As BitmapCreator
		Dim ReduceScale As Int = 2
		bc.Initialize(bmp.Width / ReduceScale / bmp.Scale, bmp.Height / ReduceScale / bmp.Scale)
		bc.CopyPixelsFromBitmap(bmp)
		Dim count As Int = 3
		Dim clrs(3) As ARGBColor
		Dim temp As ARGBColor
		Dim m As Int
		For steps = 1 To count
			For y = 0 To bc.mHeight - 1
				For x = 0 To 2
					bc.GetARGB(x, y, clrs(x))
				Next
				SetAvg(bc, 1, y, clrs, temp)
				m = 0
				For x = 2 To bc.mWidth - 2
					bc.GetARGB(x + 1, y, clrs(m))
					m = (m + 1) Mod clrs.Length
					SetAvg(bc, x, y, clrs, temp)
				Next
			Next
			For x = 0 To bc.mWidth - 1
				For y = 0 To 2
					bc.GetARGB(x, y, clrs(y))
				Next
				SetAvg(bc, x, 1, clrs, temp)
				m = 0
				For y = 2 To bc.mHeight - 2
					bc.GetARGB(x, y + 1, clrs(m))
					m = (m + 1) Mod clrs.Length
					SetAvg(bc, x, y, clrs, temp)
				Next
			Next
		Next
	Catch
		Log(LastException)
		lblStatus.Text = "Blur LastException: " & LastException
	End Try
	Return bc.Bitmap
End Sub

Private Sub SetAvg(bc As BitmapCreator, x As Int, y As Int, clrs() As ARGBColor, temp As ARGBColor)
	Try
		temp.Initialize
		For Each c As ARGBColor In clrs
			temp.r = temp.r + c.r
			temp.g = temp.g + c.g
			temp.b = temp.b + c.b
		Next
		temp.a = 255
		temp.r = temp.r / clrs.Length
		temp.g = temp.g / clrs.Length
		temp.b = temp.b / clrs.Length
		bc.SetARGB(x, y, temp)
	Catch
		Log(LastException)
		lblStatus.Text = "SetAvg LastException: " & LastException
	End Try
End Sub


Sub btnActivity_Click
	RESTGet("https://rest-" & userRegion &".immedia-semi.com/api/v1/accounts/88438/media/changed?since=2019-04-19T23:11:20+0000&page=1")
	Sleep(1000)
	
	Dim mf As frmActivity
	mf.Initialize(MainForm)
	mf.Show(response,userRegion,authToken)
End Sub

